{
  "stats": {
    "suites": 6,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2023-01-27T05:52:13.526Z",
    "end": "2023-01-27T05:52:18.572Z",
    "duration": 5046,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5469147a-61e2-4b06-8d0c-cb6d1a150da5",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ef886167-56a8-4ba0-b767-3b9c80f5363a",
          "title": "Delete Data",
          "fullFile": "D:\\Bootcamp NEST\\test_api\\tests\\scenario\\delete-user.test.js",
          "file": "\\tests\\scenario\\delete-user.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should successfully delete data",
              "fullTitle": "Delete Data Should successfully delete data",
              "timedOut": false,
              "duration": 633,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await reqresApi.update_user();\nassert.equal(response.status, 200);",
              "err": {},
              "uuid": "09166c0f-8f82-46b4-902c-47c64be1a752",
              "parentUUID": "ef886167-56a8-4ba0-b767-3b9c80f5363a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "09166c0f-8f82-46b4-902c-47c64be1a752"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 633,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "95327963-b768-4415-8b19-015cd2d0745f",
          "title": "List Users",
          "fullFile": "D:\\Bootcamp NEST\\test_api\\tests\\scenario\\list-users-test.js",
          "file": "\\tests\\scenario\\list-users-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should succesfully get list users",
              "fullTitle": "List Users Should succesfully get list users",
              "timedOut": false,
              "duration": 500,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const param = getParams(data.LIST_USERS_PARAM['page']);\nconst response = await reqresApi.list_users(param);\nassert.equal(response.status, 200);",
              "err": {},
              "uuid": "4bee52d2-2abd-4f6e-90c5-931dad188931",
              "parentUUID": "95327963-b768-4415-8b19-015cd2d0745f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4bee52d2-2abd-4f6e-90c5-931dad188931"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 500,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "09726494-044d-4470-9bf6-68199edfd12a",
          "title": "Register",
          "fullFile": "D:\\Bootcamp NEST\\test_api\\tests\\scenario\\register.test.js",
          "file": "\\tests\\scenario\\register.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should successfull register when insert valid data",
              "fullTitle": "Register Should successfull register when insert valid data",
              "timedOut": false,
              "duration": 486,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await reqresApi.register(data.VALID_REGISTER); //valid_register ini data dari user.data.js\nassert.equal(response.status, 200); //cek http response\nassert.isNumber(response.data.id);\nassert.isString(response.data.token);",
              "err": {},
              "uuid": "c7eba336-72dc-45fb-b9b9-498a3be2114c",
              "parentUUID": "09726494-044d-4470-9bf6-68199edfd12a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should unsuccessfull register when insert invalid data",
              "fullTitle": "Register Should unsuccessfull register when insert invalid data",
              "timedOut": false,
              "duration": 522,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await reqresApi.register(data.INVALID_REGISTER); //valid_register ini data dari user.data.js\nassert.equal(response.status, 400); //cek http response\nassert.isString(response.data.error);",
              "err": {},
              "uuid": "8427d915-c922-4967-ae75-a37c3c64b6a4",
              "parentUUID": "09726494-044d-4470-9bf6-68199edfd12a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c7eba336-72dc-45fb-b9b9-498a3be2114c",
            "8427d915-c922-4967-ae75-a37c3c64b6a4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1008,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "569b6ea2-1fb2-4b85-9f26-d2a341ff593f",
          "title": "User Resource",
          "fullFile": "D:\\Bootcamp NEST\\test_api\\tests\\scenario\\resource-user.test.js",
          "file": "\\tests\\scenario\\resource-user.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should successful get list <Resource>",
              "fullTitle": "User Resource Should successful get list <Resource>",
              "timedOut": false,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await reqresApi.resource_user();\nassert.equal(response.status, 200); //cek http response",
              "err": {},
              "uuid": "df380403-c221-436b-9feb-90108078dc56",
              "parentUUID": "569b6ea2-1fb2-4b85-9f26-d2a341ff593f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should successful get single <resource>",
              "fullTitle": "User Resource Should successful get single <resource>",
              "timedOut": false,
              "duration": 500,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await reqresApi.resource_user(data.SINGLE_RESOURCE);\n\nassert.equal(response.status, 200);",
              "err": {},
              "uuid": "506c5e30-b3d4-458b-adef-4a170222a90e",
              "parentUUID": "569b6ea2-1fb2-4b85-9f26-d2a341ff593f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should unsuccessful get single <resource>",
              "fullTitle": "User Resource Should unsuccessful get single <resource>",
              "timedOut": false,
              "duration": 505,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await reqresApi.invalid_resource_user();\nassert.equal(response.status, 404);",
              "err": {},
              "uuid": "74195f0c-7e31-40b8-b7fa-4be3221eb732",
              "parentUUID": "569b6ea2-1fb2-4b85-9f26-d2a341ff593f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "df380403-c221-436b-9feb-90108078dc56",
            "506c5e30-b3d4-458b-adef-4a170222a90e",
            "74195f0c-7e31-40b8-b7fa-4be3221eb732"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1117,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "da169cb8-3a06-4a3b-9a78-19334ba7a7d9",
          "title": "Single User",
          "fullFile": "D:\\Bootcamp NEST\\test_api\\tests\\scenario\\single-user.test.js",
          "file": "\\tests\\scenario\\single-user.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should successfull get single user",
              "fullTitle": "Single User Should successfull get single user",
              "timedOut": false,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await reqresApi.single_user(data.SINGLE_USER);\nassert.equal(response.status, 200);",
              "err": {},
              "uuid": "52fabbad-d2b5-451c-81c7-537a9c735542",
              "parentUUID": "da169cb8-3a06-4a3b-9a78-19334ba7a7d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should unsuccessfull get single user",
              "fullTitle": "Single User Should unsuccessfull get single user",
              "timedOut": false,
              "duration": 600,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await reqresApi.not_user();\nassert.equal(response.status, 404); //cek http response",
              "err": {},
              "uuid": "23e98915-5c9e-452d-8080-69f11b910fde",
              "parentUUID": "da169cb8-3a06-4a3b-9a78-19334ba7a7d9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "52fabbad-d2b5-451c-81c7-537a9c735542",
            "23e98915-5c9e-452d-8080-69f11b910fde"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 712,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fd97b6e7-c195-42f0-84d8-d0241d47703c",
          "title": "Update Data",
          "fullFile": "D:\\Bootcamp NEST\\test_api\\tests\\scenario\\update-user.test.js",
          "file": "\\tests\\scenario\\update-user.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should successfully update data (put)",
              "fullTitle": "Update Data Should successfully update data (put)",
              "timedOut": false,
              "duration": 510,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await reqresApi.update_user(data.UPDATE_USER);\nassert.equal(response.status, 200);",
              "err": {},
              "uuid": "6bfa1fb8-f96e-47f3-bc62-5ba1d148f9b4",
              "parentUUID": "fd97b6e7-c195-42f0-84d8-d0241d47703c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should successfully update data (patch)",
              "fullTitle": "Update Data Should successfully update data (patch)",
              "timedOut": false,
              "duration": 512,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await reqresApi.update_user(data.UPDATE_USER);\nassert.equal(response.status, 200);",
              "err": {},
              "uuid": "0534c735-3e39-4d1d-a50d-1cf50b5ee6bc",
              "parentUUID": "fd97b6e7-c195-42f0-84d8-d0241d47703c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6bfa1fb8-f96e-47f3-bc62-5ba1d148f9b4",
            "0534c735-3e39-4d1d-a50d-1cf50b5ee6bc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1022,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "report"
      },
      "version": "6.2.0"
    }
  }
}